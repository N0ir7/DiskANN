# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT license.

set(CMAKE_CXX_STANDARD 14)

add_executable(test_search_lsm_index test_search_lsm_index.cpp)
if(MSVC)
	target_link_options(test_search_lsm_index PRIVATE /MACHINE:x64 /DEBUG:FULL "/INCLUDE:_tcmalloc")
	target_link_libraries(test_search_lsm_index debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/nsg_dll.lib ${PROJECT_SOURCE_DIR}/dependencies/windows/tcmalloc/libtcmalloc_minimal.lib)
	target_link_libraries(test_search_lsm_index optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/nsg_dll.lib ${PROJECT_SOURCE_DIR}/dependencies/windows/tcmalloc/libtcmalloc_minimal.lib)
else() 
	target_link_libraries(test_search_lsm_index ${PROJECT_NAME} aio)
endif()

# add_executable(test_search_diskann test_search_diskann.cpp)
# if(MSVC)
# 	target_link_options(test_search_diskann PRIVATE /MACHINE:x64 /DEBUG:FULL)
# 	target_link_libraries(test_search_diskann debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib)
# 	target_link_libraries(test_search_diskann optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib)
# else() 
# 	target_link_libraries(test_search_diskann ${PROJECT_NAME} aio -ltcmalloc)
# endif()

# add_executable(build_lsm_index build_lsm_index.cpp)
# if(MSVC)
# 	target_link_options(build_lsm_index PRIVATE /MACHINE:x64 /DEBUG:FULL)
# 	target_link_libraries(build_lsm_index debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib)
# 	target_link_libraries(build_lsm_index optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib)
# else() 
# 	target_link_libraries(build_lsm_index ${PROJECT_NAME} aio -ltcmalloc)
# endif()

add_executable(partition_bin_dataset partition_bin_dataset.cpp)
if(MSVC)
	target_link_options(partition_bin_dataset PRIVATE /MACHINE:x64 /DEBUG:FULL)
	target_link_libraries(partition_bin_dataset debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib)
	target_link_libraries(partition_bin_dataset optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib)
else() 
	target_link_libraries(partition_bin_dataset ${PROJECT_NAME} aio -ltcmalloc)
endif()

add_executable(test test.cpp)
if(MSVC)
	target_link_options(test PRIVATE /MACHINE:x64 /DEBUG:FULL)
	target_link_libraries(test debug ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG}/diskann_dll.lib)
	target_link_libraries(test optimized ${CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE}/diskann_dll.lib)
else() 
	target_link_libraries(test ${PROJECT_NAME} aio -ltcmalloc)
endif()
